import com.rameses.annotations.*;


public class VehicleCashReceiptService {
	
	@DataContext("vw_vehicle_application")
	def vwappEm;

	@Service("VehicleBillingService")
	def billingSvc;

	@ProxyMethod
	public def getBilling( pp ) {

		def param = pp.params;
		if ( !param ) throw new Exception('params argument is required in VehicleBillingService'); 

		if ( !param?.id ) throw new Exception('id parameter is required in VehicleBillingService'); 
		if ( !param?.action ) throw new Exception('action parameter is required in VehicleBillingService'); 

		def info = vwappEm.find([ appno: param.id ]).select('objid').first();
		if ( !info ) info = vwappEm.find([ franchiseid: param.id ]).select('objid').first(); 
		if ( !info ) throw new Exception('Transaction number not found');  

		// compute bill items 
		def res = billingSvc.getBillItems( [appid: info.objid ] );
		def items = res.billitems;
		items.each {
			it.remarks = it.year;
		}

		def app = vwappEm.find([ objid: info.objid ]).first();
		if( app.task.state != 'payment') {
			throw new Exception("This transaction is not available for payment");
		}
		// build results 
		def resp = [items: items, billitems: items]; 
		resp.app = [appid: app.objid, taskid: app.taskid ];
		resp.payer = app.owner;
		resp.paidby = app.owner?.name; 
		resp.paidbyaddress = app.owner?.address?.text; 
		return resp; 
	}

}