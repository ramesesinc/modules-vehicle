import com.rameses.annotations.*;
import java.rmi.server.UID;
import com.rameses.util.*;
import enterprise.utils.*;
import java.rmi.server.*;
import java.util.*;
import vehicle.facts.*;

class VehicleFactInterceptor {

	@DataContext("vehicle_application")
	def appEm;

	@DataContext("vehicle_application_unit")
	def appUnitEm;

	@DataContext("vehicle_assessment_fee")
	def appFeeEm;

	@DataContext("vehicle_payment")
	def vehiclePmt;

	@Before(pattern="FactBuilderService.getFacts", eval="#{ args[0].rulename == 'vehicleassessment' }")
	public void beforeBuildFacts(def evt) {
		def obj =  evt.args[0]; 
		def p = obj.params;
	}

	@After(pattern="FactBuilderService.getFacts", eval="#{ args[0].rulename.toString().matches('vehicle(dates|assessment|billing)') }")
	public void buildFacts(def evt) {
		def factBuilder = evt.result; 
		def params = evt.args[0].params;

		def facts = factBuilder.facts;
		def app = params.application;
		def units = app.vehicleunits;
		if( !units) units =  appUnitEm.find( [appid: app.objid ]).list();
		app.unitcount = units.size();

		facts << new VehicleApplication( app );
		units.each {
			facts << new VehicleUnit( it );
		};

		factBuilder.variableInfoProvider = new DefaultVariableInfoProvider(
			schemaName:"vehicle_variable"
		);
	}

}

